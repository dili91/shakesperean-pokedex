#todo: improve with docker container build/push and native image build/tests

version: 2.1

references:
  openjdk_executor: &openjdk_executor
    docker:
      - image: circleci/openjdk:11
  graalvm_executor: &graalvm_executor
    docker:
      - image: oracle/graalvm-ce:20.0.0-java11
    working_directory: /home/circleci/project  
  restore_repo: &restore_repo
    restore_cache:
      keys:
        - repo-{{ .Branch }}-{{ .Revision }}
        - repo-{{ .Branch }}
        - repo    

jobs:
  checkout:
    <<: *openjdk_executor
    steps:
      - checkout
      - save_cache:
          key: repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
  build:
    <<: *openjdk_executor
    steps:
      - *restore_repo
      - restore_cache:
          key: m2-{{ checksum "pom.xml" }}
      - run: ./mvnw clean package -Dskip.unit.test=true -Dskip.integration.test=true
      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "pom.xml" }}
  native_build:
    <<: *graalvm_executor
    steps:
      - *restore_repo
      - restore_cache:
          key: m2-{{ checksum "pom.xml" }}
      - run:
          name: Install GraalVM Native Image Generator
          command: gu install native-image 
      - run: ./mvnw clean package -Pnative
  unit_tests:
    <<: *openjdk_executor
    steps:
      - *restore_repo
      - restore_cache:
          key: m2-{{ checksum "pom.xml" }}
      - run: ./mvnw test
      - run:
          name: Save unit test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit    
  integration_tests:
    <<: *openjdk_executor
    steps:
      - *restore_repo
      - restore_cache:
          key: m2-{{ checksum "pom.xml" }}
      - run: ./mvnw integration-test -Dskip.unit.test=true 
      - run:
          name: Save integration test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/failsafe-reports/.*xml" ! -name '*failsafe-summary.xml' -exec cp {} ~/test-results/junit/ \;
          when: always 
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

workflows:
  shakesperean_pokedex:
    jobs:
      - checkout
      - build:
          requires:
            - checkout
      - unit_tests:
          requires:
            - build            
      - integration_tests:
          requires:
            - build
      - native_build:
          requires:
            - checkout             